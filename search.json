[
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html",
    "href": "content/01_journal/03_data_wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html",
    "href": "content/01_journal/01_tidyverse.html",
    "title": "Tidyverse",
    "section": "",
    "text": "Add a language to syntax highlight code blocks: #loading the libraries\n\nlibrary(tidyverse)\n\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.1     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(tibble)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(magrittr)\n\n#> \n#> Attaching package: 'magrittr'\n#> \n#> The following object is masked from 'package:purrr':\n#> \n#>     set_names\n#> \n#> The following object is masked from 'package:tidyr':\n#> \n#>     extract\n\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(lubridate)\n\n#read data\n\nbikes_tbl  <-  read_excel(path = \"C:/Users/navan/OneDrive/Desktop/BM/ss23-bdsb-NavaneetS/assets/dsassets/bikes.xlsx\")\norderlines_tbl   <-  read_excel(path = \"C:/Users/navan/OneDrive/Desktop/BM/ss23-bdsb-NavaneetS/assets/dsassets/orderlines.xlsx\")\n\n#> New names:\n#> • `` -> `...1`\n\nbikeshops_tbl   <-   read_excel(path = \"C:/Users/navan/OneDrive/Desktop/BM/ss23-bdsb-NavaneetS/assets/dsassets/bikeshops.xlsx\")\n\n#join tables\n\nleft_join(orderlines_tbl, bikes_tbl, by = c(\"product.id\" = \"bike.id\"))\n\n\n\n  \n\n\nbike_orderlines_joined_tbl   <-   orderlines_tbl   %>%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\"))  %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n\n#city name from location\n\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>% \n separate(col = location,\n           into = c(\"city\",\"state\"),\n           sep = \", \",\n           convert = T) %>%\n  separate(col    = category,\n           into   = c(\"category.1\", \"category.2\", \"category.3\"),\n           sep    = \" - \") %>%\n  \n  \n  mutate(total_price = price * quantity)\n\n#Highest revenue state with the plot (North Rhine-Westphalia)\n\nsales_by_location_tbl  <-  bike_orderlines_wrangled_tbl %>%\n  select(state, total_price) %>%\n  group_by(state) %>%\n  summarize(sales = sum(total_price)) %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\",\n                                     decimal.mark = \",\",\n                                     prefix = \"\",\n                                     suffix = \"€\"))\n\n\nglimpse(sales_by_location_tbl)\n\n#> Rows: 12\n#> Columns: 3\n#> $ state      <chr> \"Baden-Württemberg\", \"Bavaria\", \"Berlin\", \"Bremen\", \"Hambur…\n#> $ sales      <dbl> 6521090, 6742819, 1128433, 10653499, 3874756, 1558901, 4107…\n#> $ sales_text <chr> \"6.521.090€\", \"6.742.819€\", \"1.128.433€\", \"10.653.499€\", \"3…\n\nsales_by_location_tbl %>%\n  ggplot(aes(x = state, y = sales)) +\n  \n  geom_col(fill = \"#2DC6D6\") +\n  geom_label(aes(label = sales_text)) +\n  #geom_smooth(method = \"lm\", se = FALSE)+\n  scale_y_continuous( labels = scales::dollar_format(big.mark = \".\",\n                                                     decimal.mark = \",\",\n                                                     prefix = \"\",\n                                                     suffix = \" €\")) +\n  \n  labs(\n    title = \"Revenue by Location(State)\",\n    subtitle = \"Trend\",\n    x = \"\",\n    y = \"Revenue\"\n  ) + theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n#Analyze the sales by location and year (facet_wrap).\n\nsales_by_location_cat_1_tbl <- bike_orderlines_wrangled_tbl %>%\n  select(state, total_price, category.1) %>%\n  group_by(state, category.1) %>%\n  summarise(sales = sum(total_price)) %>%\n  ungroup() %>%\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\", \n                                     decimal.mark = \",\", \n                                     prefix = \"\", \n                                     suffix = \" €\"))\n\n#> `summarise()` has grouped output by 'state'. You can override using the\n#> `.groups` argument.\n\n#sales_by_location_cat_1_tbl\nsales_by_location_cat_1_tbl %>%\n  ggplot(aes(x = category.1, y = sales, fill = state)) +\n  geom_col() +\n  facet_wrap(~ state) +\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\", \n                                                    decimal.mark = \",\", \n                                                    prefix = \"\", \n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by category and state\",\n    subtitle = \"Trend in sales of products in each state\",\n    fill = \"State List\"\n  )+ theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "content/01_journal/01_tidyverse.html#header-2",
    "href": "content/01_journal/01_tidyverse.html#header-2",
    "title": "Tidyverse",
    "section": "2.1 Header 2",
    "text": "2.1 Header 2\n\nHeader 3\n\nHeader 4\n\nHeader 5\n\nHeader 6"
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html",
    "href": "content/01_journal/02_data_acquisition.html",
    "title": "Data Acquisition",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/02_notes/05_class_notes.html",
    "href": "content/02_notes/05_class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.\nThis is an .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "This is a template example for lab journaling. Students in the data science courses at the Institute of Entrepreneurship will use this template to learn R for business analytics. Students can replace this text as they wish."
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "My Lab Journal",
    "section": "How to use",
    "text": "How to use\n\nAccept the assignment and get your own github repo.\nBlog/journal what you are doing in R, by editing the .qmd files.\nSee the links page for lots of helpful links on learning R.\nChange everything to make it your own.\nMake sure to render you website everytime before you want to upload changes"
  }
]